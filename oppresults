<template>
    <lightning-card>
        <lightning-datatable 
            key-field="id" 
            data={opportunityData} 
            columns={columns}>
        </lightning-datatable>
    </lightning-card>
</template>

import { LightningElement, api, track, wire } from 'lwc';
import getOpportunities from '@salesforce/apex/OpportunityController.getOpportunities';

export default class ResultComponent extends LightningElement {
    @api stage;
    @api sortfield;
    @api sortorder;

    @track opportunityData = [];
    @track columns = [
        { label: 'Id', fieldName: 'Id' },
        { label: 'Name', fieldName: 'Name' },
        { label: 'Amount', fieldName: 'Amount' },
        { label: 'Expected Revenue', fieldName: 'ExpectedRevenue' },
        { label: 'Close Date', fieldName: 'CloseDate', type: 'date' },
    ];

    @wire(getOpportunities, { stage: '$stage', sortField: '$sortfield', sortOrder: '$sortorder' })
    wiredOpportunities({ error, data }) {
        if (data) {
            this.opportunityData = data;
        } else if (error) {
            this.opportunityData = [];
            console.error(error);
        }
    }
}



public with sharing class OpportunityController {
    @AuraEnabled(cacheable=true)
    public static List<Opportunity> getOpportunities(String stage, String sortField, String sortOrder) {
        String query = 'SELECT Id, Name, Amount, ExpectedRevenue, CloseDate FROM Opportunity';
        
        if (stage != 'All') {
            query += ' WHERE StageName = :stage';
        }
        
        if (sortField != null && sortOrder != null) {
            query += ' ORDER BY ' + sortField + ' ' + sortOrder;
        }

        return Database.query(query);
    }
}