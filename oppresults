<template>
    <lightning-card title="Opportunity">
        <lightning-datatable key-field="id" data={opportunities} columns={columns}>
        </lightning-datatable>
    </lightning-card>
</template>


import { LightningElement, api, track, wire } from 'lwc';
import getOpportunities from '@salesforce/apex/OpportunityController.getOpportunities';

const columns = [
    { label: 'Id', fieldName: 'Id' },
    { label: 'Name', fieldName: 'Name' },
    { label: 'Amount', fieldName: 'Amount' },
    { label: 'Expected Revenue', fieldName: 'ExpectedRevenue' },
    { label: 'Close Date', fieldName: 'CloseDate' }
];

export default class ResultComponent extends LightningElement {
    @api stage;
    @api sortField;
    @api sortOrder;

    @track opportunities;
    @track columns = columns;

    @wire(getOpportunities, { stage: '$stage', sortField: '$sortField', sortOrder: '$sortOrder' })
    wiredOpportunities({ error, data }) {
        if (data) {
            this.opportunities = data;
        } else if (error) {
            // handle error
            this.opportunities = [];
        }
    }
}

public with sharing class OpportunityController {
    @AuraEnabled(cacheable=true)
    public static List<Opportunity> getOpportunities(String stage, String sortField, String sortOrder) {
        String query = 'SELECT Id, Name, Amount, ExpectedRevenue, CloseDate FROM Opportunity';

        if (!String.isBlank(stage)) {
            query += ' WHERE StageName = :stage';
        }

        query += ' ORDER BY ' + sortField + ' ' + sortOrder;

        return Database.query(query);
    }
}
